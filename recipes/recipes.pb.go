// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.11.4
// source: recipes/recipes.proto

package recipes

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode int64  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorStr  string `protobuf:"bytes,2,opt,name=error_str,json=errorStr,proto3" json:"error_str,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Error) GetErrorStr() string {
	if x != nil {
		return x.ErrorStr
	}
	return ""
}

type Recipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *Recipe_ID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info *Recipe_Info `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{1}
}

func (x *Recipe) GetId() *Recipe_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Recipe) GetInfo() *Recipe_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeId *Recipe_ID `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
}

func (x *GetRecipeRequest) Reset() {
	*x = GetRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecipeRequest) ProtoMessage() {}

func (x *GetRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecipeRequest.ProtoReflect.Descriptor instead.
func (*GetRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecipeRequest) GetRecipeId() *Recipe_ID {
	if x != nil {
		return x.RecipeId
	}
	return nil
}

type DeleteRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeId *Recipe_ID `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
}

func (x *DeleteRecipeRequest) Reset() {
	*x = DeleteRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeRequest) ProtoMessage() {}

func (x *DeleteRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRecipeRequest) GetRecipeId() *Recipe_ID {
	if x != nil {
		return x.RecipeId
	}
	return nil
}

type PostRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Recipe_Info `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *PostRecipeRequest) Reset() {
	*x = PostRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRecipeRequest) ProtoMessage() {}

func (x *PostRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRecipeRequest.ProtoReflect.Descriptor instead.
func (*PostRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{4}
}

func (x *PostRecipeRequest) GetInfo() *Recipe_Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type RecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
	Error  *Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RecipeResponse) Reset() {
	*x = RecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeResponse) ProtoMessage() {}

func (x *RecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeResponse.ProtoReflect.Descriptor instead.
func (*RecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{5}
}

func (x *RecipeResponse) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

func (x *RecipeResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Recipe_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeId string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	OwnerId  int64  `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *Recipe_ID) Reset() {
	*x = Recipe_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe_ID) ProtoMessage() {}

func (x *Recipe_ID) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe_ID.ProtoReflect.Descriptor instead.
func (*Recipe_ID) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Recipe_ID) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

func (x *Recipe_ID) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type Recipe_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc        *Recipe_Info_Desc         `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`
	Ingredients []*Recipe_Info_Ingredient `protobuf:"bytes,2,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
}

func (x *Recipe_Info) Reset() {
	*x = Recipe_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe_Info) ProtoMessage() {}

func (x *Recipe_Info) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe_Info.ProtoReflect.Descriptor instead.
func (*Recipe_Info) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Recipe_Info) GetDesc() *Recipe_Info_Desc {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *Recipe_Info) GetIngredients() []*Recipe_Info_Ingredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

type Recipe_Info_Desc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Recipe_Info_Desc) Reset() {
	*x = Recipe_Info_Desc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe_Info_Desc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe_Info_Desc) ProtoMessage() {}

func (x *Recipe_Info_Desc) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe_Info_Desc.ProtoReflect.Descriptor instead.
func (*Recipe_Info_Desc) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *Recipe_Info_Desc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Recipe_Info_Desc) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Recipe_Info_Ingredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value   float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Measure string  `protobuf:"bytes,3,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *Recipe_Info_Ingredient) Reset() {
	*x = Recipe_Info_Ingredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipes_recipes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe_Info_Ingredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe_Info_Ingredient) ProtoMessage() {}

func (x *Recipe_Info_Ingredient) ProtoReflect() protoreflect.Message {
	mi := &file_recipes_recipes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe_Info_Ingredient.ProtoReflect.Descriptor instead.
func (*Recipe_Info_Ingredient) Descriptor() ([]byte, []int) {
	return file_recipes_recipes_proto_rawDescGZIP(), []int{1, 1, 1}
}

func (x *Recipe_Info_Ingredient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Recipe_Info_Ingredient) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Recipe_Info_Ingredient) GetMeasure() string {
	if x != nil {
		return x.Measure
	}
	return ""
}

var File_recipes_recipes_proto protoreflect.FileDescriptor

var file_recipes_recipes_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73,
	0x22, 0x43, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x53, 0x74, 0x72, 0x22, 0xa1, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x3c,
	0x0a, 0x02, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x8a, 0x02, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x41, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3e, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x50, 0x0a, 0x0a, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x43, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x2e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0x46,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x49, 0x44, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xcb, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x19, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x41, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x1a, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x3b,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recipes_recipes_proto_rawDescOnce sync.Once
	file_recipes_recipes_proto_rawDescData = file_recipes_recipes_proto_rawDesc
)

func file_recipes_recipes_proto_rawDescGZIP() []byte {
	file_recipes_recipes_proto_rawDescOnce.Do(func() {
		file_recipes_recipes_proto_rawDescData = protoimpl.X.CompressGZIP(file_recipes_recipes_proto_rawDescData)
	})
	return file_recipes_recipes_proto_rawDescData
}

var file_recipes_recipes_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_recipes_recipes_proto_goTypes = []interface{}{
	(*Error)(nil),                  // 0: recipes.Error
	(*Recipe)(nil),                 // 1: recipes.Recipe
	(*GetRecipeRequest)(nil),       // 2: recipes.GetRecipeRequest
	(*DeleteRecipeRequest)(nil),    // 3: recipes.DeleteRecipeRequest
	(*PostRecipeRequest)(nil),      // 4: recipes.PostRecipeRequest
	(*RecipeResponse)(nil),         // 5: recipes.RecipeResponse
	(*Recipe_ID)(nil),              // 6: recipes.Recipe.ID
	(*Recipe_Info)(nil),            // 7: recipes.Recipe.Info
	(*Recipe_Info_Desc)(nil),       // 8: recipes.Recipe.Info.Desc
	(*Recipe_Info_Ingredient)(nil), // 9: recipes.Recipe.Info.Ingredient
}
var file_recipes_recipes_proto_depIdxs = []int32{
	6,  // 0: recipes.Recipe.id:type_name -> recipes.Recipe.ID
	7,  // 1: recipes.Recipe.info:type_name -> recipes.Recipe.Info
	6,  // 2: recipes.GetRecipeRequest.recipe_id:type_name -> recipes.Recipe.ID
	6,  // 3: recipes.DeleteRecipeRequest.recipe_id:type_name -> recipes.Recipe.ID
	7,  // 4: recipes.PostRecipeRequest.info:type_name -> recipes.Recipe.Info
	1,  // 5: recipes.RecipeResponse.recipe:type_name -> recipes.Recipe
	0,  // 6: recipes.RecipeResponse.error:type_name -> recipes.Error
	8,  // 7: recipes.Recipe.Info.desc:type_name -> recipes.Recipe.Info.Desc
	9,  // 8: recipes.Recipe.Info.ingredients:type_name -> recipes.Recipe.Info.Ingredient
	2,  // 9: recipes.Recipes.GetRecipe:input_type -> recipes.GetRecipeRequest
	3,  // 10: recipes.Recipes.DeleteRecipe:input_type -> recipes.DeleteRecipeRequest
	4,  // 11: recipes.Recipes.PostRecipe:input_type -> recipes.PostRecipeRequest
	5,  // 12: recipes.Recipes.GetRecipe:output_type -> recipes.RecipeResponse
	0,  // 13: recipes.Recipes.DeleteRecipe:output_type -> recipes.Error
	5,  // 14: recipes.Recipes.PostRecipe:output_type -> recipes.RecipeResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_recipes_recipes_proto_init() }
func file_recipes_recipes_proto_init() {
	if File_recipes_recipes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recipes_recipes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe_Info_Desc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipes_recipes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe_Info_Ingredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recipes_recipes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recipes_recipes_proto_goTypes,
		DependencyIndexes: file_recipes_recipes_proto_depIdxs,
		MessageInfos:      file_recipes_recipes_proto_msgTypes,
	}.Build()
	File_recipes_recipes_proto = out.File
	file_recipes_recipes_proto_rawDesc = nil
	file_recipes_recipes_proto_goTypes = nil
	file_recipes_recipes_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecipesClient is the client API for Recipes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecipesClient interface {
	GetRecipe(ctx context.Context, in *GetRecipeRequest, opts ...grpc.CallOption) (*RecipeResponse, error)
	DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*Error, error)
	PostRecipe(ctx context.Context, in *PostRecipeRequest, opts ...grpc.CallOption) (*RecipeResponse, error)
}

type recipesClient struct {
	cc grpc.ClientConnInterface
}

func NewRecipesClient(cc grpc.ClientConnInterface) RecipesClient {
	return &recipesClient{cc}
}

func (c *recipesClient) GetRecipe(ctx context.Context, in *GetRecipeRequest, opts ...grpc.CallOption) (*RecipeResponse, error) {
	out := new(RecipeResponse)
	err := c.cc.Invoke(ctx, "/recipes.Recipes/GetRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipesClient) DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := c.cc.Invoke(ctx, "/recipes.Recipes/DeleteRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipesClient) PostRecipe(ctx context.Context, in *PostRecipeRequest, opts ...grpc.CallOption) (*RecipeResponse, error) {
	out := new(RecipeResponse)
	err := c.cc.Invoke(ctx, "/recipes.Recipes/PostRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecipesServer is the server API for Recipes service.
type RecipesServer interface {
	GetRecipe(context.Context, *GetRecipeRequest) (*RecipeResponse, error)
	DeleteRecipe(context.Context, *DeleteRecipeRequest) (*Error, error)
	PostRecipe(context.Context, *PostRecipeRequest) (*RecipeResponse, error)
}

// UnimplementedRecipesServer can be embedded to have forward compatible implementations.
type UnimplementedRecipesServer struct {
}

func (*UnimplementedRecipesServer) GetRecipe(context.Context, *GetRecipeRequest) (*RecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecipe not implemented")
}
func (*UnimplementedRecipesServer) DeleteRecipe(context.Context, *DeleteRecipeRequest) (*Error, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecipe not implemented")
}
func (*UnimplementedRecipesServer) PostRecipe(context.Context, *PostRecipeRequest) (*RecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostRecipe not implemented")
}

func RegisterRecipesServer(s *grpc.Server, srv RecipesServer) {
	s.RegisterService(&_Recipes_serviceDesc, srv)
}

func _Recipes_GetRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).GetRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.Recipes/GetRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).GetRecipe(ctx, req.(*GetRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recipes_DeleteRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).DeleteRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.Recipes/DeleteRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).DeleteRecipe(ctx, req.(*DeleteRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recipes_PostRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipesServer).PostRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipes.Recipes/PostRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipesServer).PostRecipe(ctx, req.(*PostRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Recipes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recipes.Recipes",
	HandlerType: (*RecipesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRecipe",
			Handler:    _Recipes_GetRecipe_Handler,
		},
		{
			MethodName: "DeleteRecipe",
			Handler:    _Recipes_DeleteRecipe_Handler,
		},
		{
			MethodName: "PostRecipe",
			Handler:    _Recipes_PostRecipe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recipes/recipes.proto",
}
